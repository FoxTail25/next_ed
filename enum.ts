// enum используется для ограничения области значений той или иной переменной!

// По умолчанию енамы являются числовыми и их значения начинаются с нуля.
// Если в нижеследующем примере навести курсор мыши на значение "up" то мы увидим числовое представление енама равное нулю
// Пример 1:
enum direction {
    up,
    down,
    left,
    right
};

// Числовые значения енамов можно изменять. В нижеследующем примере изменено первое числовое значение. Нижеследующие значения изменились автоматически.
// Пример 2:
enum direction2 {
    up = 3,
    down,
    left,
    right
}
// Пример 3:
// В примере 2 и 3 приведены числовые енамы. В примере 3 значение up и значение right будут равны 4
enum direction3 {
    up = 4,
    down = 2,
    left,
    right
}
// так же помимо числовых енамов бывают строковые.
// Пример 4 строковый енам (в строковых енамах автоматическое назначени значений не работает)
enum direction4 {
    up = "UP",
    down = "DOWN",
    left = "LEFT",
    right = "RIGHT"
}
// В гетерогенных енамах дествует тот же набор правил которые используются для строковых и числовыъ енамов
// Пример 5: Гетерогенный енам (строковый и числовой)
enum direction5 {
    up = "UP",
    down = 1,
    left ,
    right = "RIGHT"
}
// Значения енамов могут быть вычисляемыми
// Пример 6: Расчётные енамы
enum Direction6 {
    up = "up",
    down = getEnumValue(),
    left = 3,
    right
}
function getEnumValue() {
    return 2
}
// Даже если расчётный енам возвращает число, автозаполнение нижеследующих значений енама работать не будет.!


